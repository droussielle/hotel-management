<project name="hotel-management" default="dist" basedir=".">
    <description>
        build file used to create an executable for hotel-management
    </description>
    <!-- set global properties for this build -->
    <property name="fileName" value="hotel-management"/>
    <property name="ant" location="ant"/>
    <property name="src" location="src/main"/>
    <property name="build" location="ant/build"/>
    <property name="dist" location="ant/dist"/>
    <property name="resources" location="src/main/resources"/>
    <property name="lib" location="lib"/>

    <path id="master-classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="unjar_dependencies">
        <unzip dest="${build}">
            <fileset dir="${lib}">
                <include name="*.jar" />
            </fileset>
        </unzip>
    </target>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}"
               source="1.8" target="1.8" debug="on" includeantruntime="false">
            <classpath refid="master-classpath"/>
            <compilerarg value="-Xlint"/>
            <compilerarg value="-Xmaxwarns"/>
            <compilerarg value="9999"/>
        </javac>
    </target>

    <target name="dist" depends="compile, unjar_dependencies"
            description="generate the distribution">
        <!-- Put everything in ${build} into the ${fileName}.jar file -->
        <jar jarfile="${dist}/${fileName}.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="com.hotelmanager.ui.HotelManagementSystemUI"/>
            </manifest>
            <fileset dir="${resources}" includes="**"/>
            <fileset dir="${build}">
                <include name="*.class" />
            </fileset>
        </jar>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${ant}"/>
    </target>
</project>